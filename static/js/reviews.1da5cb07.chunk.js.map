{"version":3,"file":"static/js/reviews.1da5cb07.chunk.js","mappings":"6LAGaA,EAAS,WAClB,OACI,SAAC,KAAD,CACIC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CAAEC,OAAQ,c,4JCHrB,SAASC,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,oGACMC,EAAAA,GAAoBJ,GAD1B,OACTK,EADS,OAEfN,EAAWM,GAFI,2CAAH,qDAIhBF,MACD,CAACH,KAGA,iCACMF,IAAW,SAAC,IAAD,IAEQ,KAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASQ,UAAiB,0DAE1BR,IACG,wBACCA,EAAQS,KAAI,SAAAC,GACT,OACI,2BACI,0BAAG,oCAAgBA,EAAKC,WACxB,6BAAKD,EAAKE,aAFLF,EAAKG,c,6NCxBhCC,G,OAAU,oCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,6GAEFD,IAAAA,IAAA,oCAAuCD,IAFrC,cAEnBG,EAFmB,yBAGlBA,EAASC,KAAKC,SAHI,gCAKzBC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OACQ,KANJ,iEAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEAR,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,IAFpD,cAEjBN,EAFiB,yBAGhBA,EAASC,KAAKC,SAHE,gCAKvBC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH,sDASfG,EAAe,mCAAG,WAAMX,GAAN,gGAEAE,IAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,IAFlC,cAEjBG,EAFiB,yBAGhBA,EAASC,MAHO,gCAKvBE,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH,sDASfI,EAAe,mCAAG,WAAMZ,GAAN,gGAEAE,IAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IAF1C,cAEjBG,EAFiB,yBAGhBA,EAASC,KAAKQ,MAHE,gCAKvBN,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH,sDASfM,EAAe,mCAAG,WAAMd,GAAN,gGAEAE,IAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IAF1C,cAEjBG,EAFiB,yBAGhBA,EAASC,KAAKC,SAHE,gCAKvBC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH","sources":["components/Loader/Loader.jsx","pages/ReviewsPage/ReviewsPage.jsx","services/api.js"],"sourcesContent":["// import { LoadingText } from './Loader.styled';\nimport { Watch } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n        <Watch\n            color=\"#0c595c\"\n            height={80}\n            width={80}\n            wrapperStyle={{ margin: '0 auto' }}\n        />\n    )\n};\n\n    // return <LoadingText>loading...</LoadingText>","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from \"components/Loader/Loader\"\nimport *as API from \"../../services/api\";\n\n\nexport default function ReviewsPages()  {\n    const [reviews, setReviews] = useState(null);\n    const { movieId } = useParams()\n    \n    useEffect(() => {\n        const getReviews = async () => {\n            const result = await API.getMovieReviews(movieId)\n            setReviews(result)\n        }\n        getReviews()\n    }, [movieId]);\n\n    return (\n        <>\n            {!reviews && <Loader />}\n\n            {reviews?.length === 0 && (<p>We don't have any reviews info</p>)}\n\n            {reviews && (\n                <ul>\n                {reviews.map(item => {\n                    return (\n                        <li key={item.id}>\n                            <b><b>Author: </b>{item.author}</b>\n                            <p> {item.content}</p>\n                        </li>\n                    )\n                })}\n            </ul>\n            )}\n            \n        </>\n    )\n}; ","import { Link } from \"react-router-dom\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport axios from 'axios';\n\nconst API_KEY = '07d8f6bb3fbc4adc66305e6fcf7baef2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n        <p>Sorry, page not found :( <Link to=\"/\">Please go to main page</Link></p>\n    };\n};\n\nexport const getSearchMovies = async searchQuery => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${searchQuery}`);\n        return response.data.results;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getMovieDetails = async id => {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n        return response.data;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getMovieCredits = async id => {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n        return response.data.cast;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getMovieReviews = async id => {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\n"],"names":["Loader","color","height","width","wrapperStyle","margin","ReviewsPages","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","API","result","length","map","item","author","content","id","API_KEY","axios","getTrendingMovies","response","data","results","Notify","code","getSearchMovies","searchQuery","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}