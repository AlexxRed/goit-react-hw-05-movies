{"version":3,"file":"static/js/cast.2fe3e6c6.chunk.js","mappings":"yRAMe,SAASA,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,mCAAG,6GAEaC,EAAAA,GAAoBJ,GAFjC,OAEFK,EAFE,OAGRN,EAAQM,GAHA,gDAKRC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALb,iEAAH,qDAQbJ,MACD,CAACH,KAGA,iCACMF,IAAQ,SAAC,IAAD,IAEQ,KAAb,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMU,UAAiB,2DAEnB,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMU,QAAS,IACZ,wBACCV,EAAKW,KAAI,SAAAC,GACN,OACI,2BACI,gBAAKC,IAAG,yCAAoCD,EAAKE,cAAgBC,IAAI,MACrE,uBAAIH,EAAKI,QACT,0BAAG,sCAAH,IAAsBJ,EAAKK,eAHtBL,EAAKM,c,0MC9BhCC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACFD,IAAAA,IAAA,oCAAuCD,IADrC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,uFACAN,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDO,IADpD,cACjBJ,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,sDAKfG,EAAe,mCAAG,WAAMT,GAAN,uFACAE,IAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,IADlC,cACjBG,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKfK,EAAe,mCAAG,WAAMV,GAAN,uFACAE,IAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IAD1C,cACjBG,EADiB,yBAEhBA,EAASC,KAAKvB,MAFE,2CAAH,sDAKf6B,EAAe,mCAAG,WAAMX,GAAN,uFACAE,IAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IAD1C,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH","sources":["pages/CastPage/CastPage.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loader } from \"components/Loader/Loader\"\nimport *as API from \"../../services/api\";\n\nexport default function CastPage() {\n    const [cast, setCast] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const getCast = async () => {\n            try {\n                const result = await API.getMovieCredits(movieId)\n                setCast(result)\n            } catch (error) {\n                Notify.info(`${error.code}`);\n    };\n        }\n        getCast()\n    }, [movieId]);\n\n    return (\n        <>\n            {!cast && <Loader />}\n\n            {cast?.length === 0 && (<p>We don't have any casters info</p>)}\n\n            {cast?.length > 0 && (\n                <ul>\n                {cast.map(item => {\n                    return (\n                        <li key={item.id}>\n                            <img src={`https://image.tmdb.org/t/p/w300${item.profile_path}`} alt=\"\" />\n                            <p>{item.name}</p>\n                            <p><b>Character:</b> {item.character}</p>\n                        </li>\n                    )\n                })}\n            </ul>\n            )}\n        </>\n    )\n}; ","import axios from 'axios';\n\nconst API_KEY = '07d8f6bb3fbc4adc66305e6fcf7baef2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n        const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n        return response.data.results;\n};\n\nexport const getSearchMovies = async searchQuery => {\n        const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${searchQuery}`);\n        return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n        return response.data;\n};\n\nexport const getMovieCredits = async id => {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n        return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n        return response.data.results;\n};\n\n"],"names":["CastPage","useState","cast","setCast","movieId","useParams","useEffect","getCast","API","result","Notify","code","length","map","item","src","profile_path","alt","name","character","id","API_KEY","axios","getTrendingMovies","response","data","results","getSearchMovies","searchQuery","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}