{"version":3,"file":"static/js/reviews.6dd6ea37.chunk.js","mappings":"kSAQe,SAASA,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,6GAEMC,EAAAA,GAAoBJ,GAF1B,OAETK,EAFS,OAGXN,EAAWM,GAHA,gDAKXC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OACQ,KANlB,iEAAH,qDAShBJ,MACD,CAACH,KAGA,iCACMF,IAAW,SAAC,IAAD,IAEQ,KAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASU,UAAiB,0DAE1BV,IACG,wBACCA,EAAQW,KAAI,SAAAC,GACT,OACI,2BACI,0BAAG,oCAAgBA,EAAKC,WACxB,6BAAKD,EAAKE,aAFLF,EAAKG,c,0MCjChCC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACFD,IAAAA,IAAA,oCAAuCD,IADrC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,uFACAN,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDO,IADpD,cACjBJ,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,sDAKfG,EAAe,mCAAG,WAAMT,GAAN,uFACAE,IAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,IADlC,cACjBG,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKfK,EAAe,mCAAG,WAAMV,GAAN,uFACAE,IAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IAD1C,cACjBG,EADiB,yBAEhBA,EAASC,KAAKM,MAFE,2CAAH,sDAKfC,EAAe,mCAAG,WAAMZ,GAAN,uFACAE,IAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IAD1C,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH","sources":["pages/ReviewsPage/ReviewsPage.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loader } from \"components/Loader/Loader\"\nimport *as API from \"../../services/api\";\n\n\nexport default function ReviewsPages()  {\n    const [reviews, setReviews] = useState(null);\n    const { movieId } = useParams()\n    \n    useEffect(() => {\n        const getReviews = async () => {\n            try {\n            const result = await API.getMovieReviews(movieId)\n                setReviews(result)\n            } catch (error) {\n                Notify.info(`${error.code}`);\n                <p>Sorry, page not found :( <Link to=\"/\">Please go to main page</Link></p>\n            };\n        }\n        getReviews();\n    }, [movieId]);\n\n    return (\n        <>\n            {!reviews && <Loader />}\n\n            {reviews?.length === 0 && (<p>We don't have any reviews info</p>)}\n\n            {reviews && (\n                <ul>\n                {reviews.map(item => {\n                    return (\n                        <li key={item.id}>\n                            <b><b>Author: </b>{item.author}</b>\n                            <p> {item.content}</p>\n                        </li>\n                    )\n                })}\n            </ul>\n            )}\n            \n        </>\n    )\n}; ","import axios from 'axios';\n\nconst API_KEY = '07d8f6bb3fbc4adc66305e6fcf7baef2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n        const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n        return response.data.results;\n};\n\nexport const getSearchMovies = async searchQuery => {\n        const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${searchQuery}`);\n        return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n        return response.data;\n};\n\nexport const getMovieCredits = async id => {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n        return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n        return response.data.results;\n};\n\n"],"names":["ReviewsPages","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","API","result","Notify","code","length","map","item","author","content","id","API_KEY","axios","getTrendingMovies","response","data","results","getSearchMovies","searchQuery","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}