{"version":3,"file":"static/js/home-page.ce4ad0e0.chunk.js","mappings":"kRAEaA,EAAaC,EAAAA,EAAAA,GAAH,gE,SCAVC,EAAY,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACvB,OACI,SAACH,EAAD,UAAaG,KCFRC,EAAYH,EAAAA,EAAAA,GAAH,8C,UCIP,SAASI,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OATAC,EAAAA,EAAAA,YAAU,WACN,IAAKF,EAAQ,CACT,IAAMG,EAAS,mCAAG,8FACRC,EAAAA,KAAwBC,KAAKJ,GADrB,2CAAH,qDAGfE,OAEL,CAACH,KAGA,iCACI,SAACL,EAAD,CAAWC,KAAM,oBAChBI,IACD,wBAEQA,EAAOM,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACvB,OACI,SAACZ,EAAD,WACI,SAAC,KAAD,CAAMa,GAAE,iBAAYD,GAApB,gBACKF,QADL,IACKA,EAAAA,EAASC,KAFFC,SAUhC,SAAC,KAAD,S,6NClCNE,G,OAAU,oCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,6GAEFD,IAAAA,IAAA,oCAAuCD,IAFrC,cAEnBG,EAFmB,yBAGlBA,EAASC,KAAKC,SAHI,gCAKzBC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OACQ,KANJ,iEAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEAR,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,IAFpD,cAEjBN,EAFiB,yBAGhBA,EAASC,KAAKC,SAHE,gCAKvBC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH,sDASfG,EAAe,mCAAG,WAAMZ,GAAN,gGAEAG,IAAAA,IAAA,iBAAoBH,EAApB,oBAAkCE,IAFlC,cAEjBG,EAFiB,yBAGhBA,EAASC,MAHO,gCAKvBE,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH,sDASfI,EAAe,mCAAG,WAAMb,GAAN,gGAEAG,IAAAA,IAAA,iBAAoBH,EAApB,4BAA0CE,IAF1C,cAEjBG,EAFiB,yBAGhBA,EAASC,KAAKQ,MAHE,gCAKvBN,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH,sDASfM,EAAe,mCAAG,WAAMf,GAAN,gGAEAG,IAAAA,IAAA,iBAAoBH,EAApB,4BAA0CE,IAF1C,cAEjBG,EAFiB,yBAGhBA,EAASC,KAAKC,SAHE,gCAKvBC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH","sources":["components/PageTitle/PageTitle.styled.jsx","components/PageTitle/PageTitle.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageHeader = styled.h1`\n    color: #377bbb;\n    height: 20px;\n`;","import { PageHeader } from \"./PageTitle.styled\";\n\nexport const PageTitle = ({text}) => {\n    return (\n        <PageHeader>{text}</PageHeader>\n    )\n};\n","import styled from '@emotion/styled';\n\nexport const MovieItem = styled.li`\nmargin-bottom: 10px;\n`;","import {useEffect, useState } from \"react\";\nimport { Link, Outlet } from 'react-router-dom';\nimport { PageTitle } from \"components/PageTitle/PageTitle\";\nimport { MovieItem } from \"./HomePage.styled\";\nimport * as API from \"../../services/api\";\n\nexport default function HomePage () {\n    const [movies, setMovies] = useState(null);\n    // const location = useLocation()\n    // console.log(location);\n\n    useEffect(() => {\n        if (!movies) {\n            const getMovies = async () => {\n                await API.getTrendingMovies().then(setMovies);\n        }\n            getMovies();\n        }\n    }, [movies]);\n    \n    return (\n        <>\n            <PageTitle text={'Trending Movies'} />\n            {movies && (\n            <ul>\n                {\n                    movies.map(({ title, name, id }) => {\n                        return (\n                            <MovieItem key={id}>\n                                <Link to={`movies/${id}`} >\n                                    {title ?? name}\n                                </Link>\n                            </MovieItem>\n                        )\n                    })\n                }\n                </ul>\n            )}\n            <Outlet/>\n        </>\n    );\n};\n\n","import { Link } from \"react-router-dom\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport axios from 'axios';\n\nconst API_KEY = '07d8f6bb3fbc4adc66305e6fcf7baef2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n        <p>Sorry, page not found :( <Link to=\"/\">Please go to main page</Link></p>\n    };\n};\n\nexport const getSearchMovies = async searchQuery => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${searchQuery}`);\n        return response.data.results;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getMovieDetails = async id => {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n        return response.data;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getMovieCredits = async id => {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n        return response.data.cast;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getMovieReviews = async id => {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\n"],"names":["PageHeader","styled","PageTitle","text","MovieItem","HomePage","useState","movies","setMovies","useEffect","getMovies","API","then","map","title","name","id","to","API_KEY","axios","getTrendingMovies","response","data","results","Notify","code","getSearchMovies","searchQuery","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}