{"version":3,"file":"static/js/home-page.036b8d7e.chunk.js","mappings":"oRAEaA,EAAaC,EAAAA,EAAAA,GAAH,gE,SCAVC,EAAY,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACvB,OACI,SAACH,EAAD,UAAaG,KCFRC,EAAYH,EAAAA,EAAAA,GAAH,sZAeTI,EAAaJ,EAAAA,EAAAA,GAAH,6I,oBCVR,SAASK,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAajB,OAVAC,EAAAA,EAAAA,YAAU,WACN,IAAKJ,EAAQ,CACT,IAAMK,EAAS,mCAAG,oGACYC,EAAAA,KADZ,OACRC,EADQ,OAEdN,EAAUM,GAFI,2CAAH,qDAIfF,OAEL,CAACL,KAGA,iCACI,SAACN,EAAD,CAAWC,KAAM,oBAChBK,IACD,SAACH,EAAD,UAEQG,EAAOQ,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAC3B,OACI,SAAChB,EAAD,WACI,UAAC,KAAD,CAAMiB,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMb,GAAzC,UACKU,GACI,gBAAKI,IAAG,yCAAoCJ,GAAeK,IAAKR,KAChE,gBAAKO,IAAKE,EAAWD,IAAI,WAHlC,OAIKR,QAJL,IAIKA,EAAAA,EAASC,MALFC,SAahC,SAAC,KAAD,S,6NCvCNQ,G,OAAU,oCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,6GAEFD,IAAAA,IAAA,oCAAuCD,IAFrC,cAEnBG,EAFmB,yBAGlBA,EAASC,KAAKC,SAHI,gCAKzBC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALI,iEAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEAR,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,IAFpD,cAEjBN,EAFiB,yBAGhBA,EAASC,KAAKC,SAHE,gCAKvBC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH,sDASfG,EAAe,mCAAG,WAAMlB,GAAN,gGAEAS,IAAAA,IAAA,iBAAoBT,EAApB,oBAAkCQ,IAFlC,cAEjBG,EAFiB,yBAGhBA,EAASC,MAHO,gCAKvBE,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH,sDASfI,EAAe,mCAAG,WAAMnB,GAAN,gGAEAS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA0CQ,IAF1C,cAEjBG,EAFiB,yBAGhBA,EAASC,KAAKQ,MAHE,gCAKvBN,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OALE,iEAAH,sDASfM,EAAe,mCAAG,WAAMrB,GAAN,gGAEAS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA0CQ,IAF1C,cAEjBG,EAFiB,yBAGhBA,EAASC,KAAKC,SAHE,gCAKvBC,EAAAA,OAAAA,KAAA,UAAe,KAAMC,OACgB,KANd,iEAAH,uD","sources":["components/PageTitle/PageTitle.styled.jsx","components/PageTitle/PageTitle.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageHeader = styled.h1`\n    color: #377bbb;\n    height: 20px;\n`;","import { PageHeader } from \"./PageTitle.styled\";\n\nexport const PageTitle = ({text}) => {\n    return (\n        <PageHeader>{text}</PageHeader>\n    )\n};\n","import styled from '@emotion/styled';\n\nexport const MovieItem = styled.li`\npadding-bottom: 20px;\n    padding: 5px 0px;\n    height: 471px;\n    cursor: pointer;\n    margin: 0;\n    border-radius: 5px;\n    :hover,\n    :focus {\n        box-shadow: 0 1px 4px rgba(255, 107, 1, 1), -23px 0 20px -23px rgba(255, 107, 1, 0.8),\n        23px 0 20px -23px rgba(255, 107, 1, 0.8), 0 0 40px rgba(255, 107, 1, 0.1) inset;\n        transform: scale(1.05);\n    }\n`;\n\nexport const MoviesList = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-column-gap: 15px;\n    grid-row-gap: 15px;\n`;","import {useEffect, useState } from \"react\";\nimport { Link, Outlet,useLocation } from 'react-router-dom';\nimport { PageTitle } from \"components/PageTitle/PageTitle\";\nimport { MovieItem, MoviesList } from \"./HomePage.styled\";\nimport  notPoster  from \"images/no-poster-available.jpg\";\nimport * as API from \"../../services/api\";\n\nexport default function HomePage () {\n    const [movies, setMovies] = useState(null);\n    const location = useLocation()\n    // console.log(location);\n\n    useEffect(() => {\n        if (!movies) {\n            const getMovies = async () => {\n                const fetchMovies = await API.getTrendingMovies()\n                setMovies(fetchMovies)\n        }\n            getMovies();\n        }\n    }, [movies]);\n    \n    return (\n        <>\n            <PageTitle text={'Trending Movies'} />\n            {movies && (\n            <MoviesList>\n                {\n                    movies.map(({ title, name, id, poster_path }) => {\n                        return (\n                            <MovieItem key={id}>\n                                <Link to={`movies/${id}`} state={{ from: location }}>\n                                    {poster_path?\n                                        (<img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />) :\n                                        (<img src={notPoster} alt=\"Uknown\" />)}\n                                    {title ?? name}\n                                </Link>\n                            </MovieItem>\n                        )\n                    })\n                }\n                </MoviesList>\n            )}\n            <Outlet/>\n        </>\n    );\n};\n\n","import { Link } from \"react-router-dom\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport axios from 'axios';\n\nconst API_KEY = '07d8f6bb3fbc4adc66305e6fcf7baef2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getSearchMovies = async searchQuery => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${searchQuery}`);\n        return response.data.results;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getMovieDetails = async id => {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n        return response.data;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getMovieCredits = async id => {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n        return response.data.cast;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n    };\n};\n\nexport const getMovieReviews = async id => {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        Notify.info(`${error.code}`);\n                <p>Sorry, page not found :( <Link to=\"/\">Please go to main page</Link></p>\n    };\n};\n\n"],"names":["PageHeader","styled","PageTitle","text","MovieItem","MoviesList","HomePage","useState","movies","setMovies","location","useLocation","useEffect","getMovies","API","fetchMovies","map","title","name","id","poster_path","to","state","from","src","alt","notPoster","API_KEY","axios","getTrendingMovies","response","data","results","Notify","code","getSearchMovies","searchQuery","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}